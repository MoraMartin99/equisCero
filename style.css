/* Estilos globales */
/* -------------------------------------------------------------------------------------------------------------- */

/* Fuentes */
/* -------------------------------------------------------- */
@font-face {
    font-family: lugati;
    src: url(./fonts/woff2/lugati_bld-webfont.woff2) format("woff2"), url(./fonts/woff/lugati_bld-webfont.woff) format("woff");
    font-weight: 700;
    font-style: normal;
}

@font-face {
    font-family: lugati;
    src: url(./fonts/woff2/lugati_rglr-webfont.woff2) format("woff2"), url(./fonts/woff/lugati_rglr-webfont.woff) format("woff");
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: lugati;
    src: url(./fonts/woff2/lugati_rglr_itlk-webfont.woff2) format("woff2"),
        url(./fonts/woff/lugati_rglr_itlk-webfont.woff) format("woff");
    font-weight: 400;
    font-style: italic;
}
/* -------------------------------------------------------- */

html {
    /* Colors */
    /* -------------------------------------------------------- */
    --colorPrimary100: #e685bf;
    --colorPrimary200: #cc76a9;
    --colorPrimary300: #b36794;
    --colorPrimary400: #99587f;
    --colorPrimary500: #80496a;
    --colorPrimary600: #663a54;
    --colorPrimary700: #4d2c3f;
    --colorPrimary800: #331d2a;
    --colorSecondary100: #e6cb45;
    --colorSecondary200: #ccb33c;
    --colorSecondary300: #b39d34;
    --colorSecondary400: #99862d;
    --colorSecondary500: #807225;
    --colorSecondary600: #665a1d;
    --colorSecondary700: #4d4516;
    --colorSecondary800: #332e0f;
    --colorAccent1: #ffd700;
    --colorAccent1Disabled: #ccb33c;
    --colorPlayer1-100: #81fcff;
    --colorPlayer2-100: #ffeb84;
    --colorDraw100: #8fff85;
    --colorInvalid100: #ffb396;
    --colorInvalidInputTextBackground: #fee3d9;
    --colorInvalidInputTextFont: #b35f3f;
    --colorValid100: #9bff96;
    --colorValidInputTextBackground: #e9ffe6;
    --colorValidInputTextFont: #269d24;
    --colorInputTextBackground: #ffe6f5;
    --colorInputTextFont: #ffc7e8;
    --menuContainerBackgroundColor: #06060666;
    /* -------------------------------------------------------- */

    /* Fonts */
    /* -------------------------------------------------------- */
    --homeContainerFontSize: clamp(1.375rem, 0.6607rem + 3.5714vw, 2.375rem);
    --homeMenuFontSize: clamp(1.125rem, 0.5671rem + 2.7893vw, 1.906rem);
    --homeMenuPlayerNameFontSize: calc(1em * (20 / 18));
    --playerNameMenuFontSize: clamp(1.188rem, 0.6751rem + 2.5643vw, 1.906rem);
    --playerNameInputFontSize: calc(1em * (18 / 19));
    --inputInvalidMessageFontSize: calc(1em * (15 / 19));
    --difficultyMenuFontSize: clamp(1rem, 0.576rem + 2.12vw, 1.594rem);
    --difficultyMenuMenuTitleFontSize: calc(1em * (19 / 16));
    --difficultyMenuOptionLabelFontSize: calc(1em * (13.91 / 16));
    --playersContainerPlayerNameFontSize: clamp(0.921rem, 4.6vw, 2.209rem);
    --currentPlayerPlayersContainerPlayerNameFontSize: clamp(1.188rem, 5.94vw, 2.85rem);
    --pauseMenuPauseOptionButtonFontSize: clamp(1.25rem, 0.692rem + 2.79vw, 2.031rem);
    --pauseMenuMenuTitleFontSize: clamp(1.875rem, 1.049rem + 4.13vw, 3.031rem);
    --confirmationMenuTitleFontSize: clamp(1.25rem, 0.692rem + 2.79vw, 2.031rem);
    --resultMessageFontSize: clamp(1.125rem, 0.634rem + 2.46vw, 1.813rem);
    /* -------------------------------------------------------- */

    /* Size */
    /* -------------------------------------------------------- */
    --homeContainerIconSize: calc(1em * (50 / 22));
    --githubIconWidth: clamp(30px, 12.1376px + 5.5821vw, 55px);
    --homeMenuAvatarImageSize: clamp(65px, 31.7968px + 10.3786vw, 111.5px);
    --homeMenuVSIconSize: calc(1em * (52.74 / 18));
    --homeMenuGameTypeOptionWidth: calc(1em * (149.26 / 18));
    --sessionMenuWidth: clamp(280px, 158.5712px + 37.9464vw, 450px);
    --avatarDecoratorSize: calc(100% * (14 / 60));
    --playerNameMenuAvatarImageSize: clamp(60px, 34.288px + 8.04vw, 96px);
    --playerNameInputWidth: calc(1em * (120 / 18));
    --inputInvalidMessageIconSize: clamp(18px, 10.144px + 2.46vw, 29px);
    --navigationButtonSize: clamp(35px, 20px + 4.69vw, 56px);
    --navigationButtonBackgroundSize: calc(100% * (30 / 35));
    --difficultyIconSize: clamp(60.9px, 34.752px + 8.17vw, 97.5px);
    --difficultyIconCheckedSize: clamp(70px, 39.632px + 9.49vw, 112.51px);
    --iconContainerDecoratorSize: clamp(20px, 11.424px + 2.68vw, 32px);
    --playersContainerAvatarImageSize: clamp(42.63px, 13.32vw, 102.312px);
    --playersContainerVSIconWidth: clamp(29.49px, 1.584px + 8.72vw, 68.55px);
    --currentPlayerPlayersContainerAvatarImageSize: clamp(55px, 17.19vw, 132px);
    --currentPlayerPlayerNameDecoratorWidthSize: clamp(10.99px, 3.43vw, 26.3759px);
    --currentPlayerPlayerCardContainerWidth: calc(12ch + (-2 * var(--currentPlayerPlayerNameDecoratorOffset)));
    --currentPlayerPlayerCardContainerHeight: calc(
        var(--currentPlayerPlayersContainerPlayerNameFontSize) + (-1 * var(--currentPlayerPlayerNameDecoratorOffset)) +
            var(--currentPlayerPlayersContainerColumnGap) + var(--currentPlayerPlayersContainerAvatarImageSize)
    );
    --boardCellSize: clamp(90.67px, 50.432px + 12.57vw, 147px);
    --cellTokenSize: clamp(80px, 44.288px + 11.16vw, 130px);
    --cellInvalidMoveBackgroundSize: calc(100% * 130 / 147);
    --roundIndicatorWidth: clamp(10px, 5.36px + 1.45vw, 16.5px);
    --roundIndicatorHeight: clamp(15px, 8.208px + 2.12vw, 24.5px);
    --pauseButtonIconWidth: clamp(50px, 28.576px + 6.7vw, 80px);
    --pauseButtonIconHeight: calc(var(--pauseButtonIconWidth) / 2);
    --pauseMenuPauseOptionIconSize: clamp(25px, 13.936px + 3.46vw, 40.5px);
    --playButtonIconWidth: clamp(50px, 28.576px + 6.7vw, 80px);
    --playButtonIconHeight: calc(var(--playButtonIconWidth) / 2);
    --confirmationMenuConfirmationButtonSize: clamp(60px, 33.216px + 8.37vw, 97.5px);
    --confirmationMenuConfirmationButtonBGSize: calc(100% * (45 / 60));
    --winnerAvatarSize: clamp(150px, 82.864px + 20.98vw, 244px);
    --winnerAvatarContainerBannerWidth: clamp(250px, 138.576px + 34.82vw, 406px);
    --resultMenuResultButtonWidth: clamp(70px, 38.928px + 9.71vw, 113.5px);
    --resultMenuResultButtonHeight: clamp(35px, 19.28px + 4.91vw, 57px);
    --resultMenuResultButtonIconSize: clamp(30px, 16.784px + 4.13vw, 48.5px);
    --winnerAvatarContainerDecoratorSize: calc(100% * (100 / 150));
    --drawWinnerAvatarContainerColumnWidth: clamp(6px, 3.312px + 0.84vw, 9.76px);
    /* -------------------------------------------------------- */

    /* gap */
    /* -------------------------------------------------------- */
    --homeContainerColumnGap: calc(1em * (10 / 22));
    --homeMenuRowGap: clamp(10px, -4.2864px + 4.4643vw, 30px);
    --gameTypeFieldsetRowGap: clamp(5px, 2.5168px + 0.7786vw, 8.5px);
    --legendContainerColumnGap: calc(1em * (5 / 18));
    --playerContainerRowGap: var(--legendContainerColumnGap);
    --playerNameMenuRowGap1: var(--sessionMenuPaddingBottom);
    --playerNameMenuRowGap2: clamp(8.5px, 4.928px + 1.12vw, 13.5px);
    --playerNameMenuInputContainerRowGap: clamp(8.5px, 4.928px + 1.12vw, 13.5px);
    --inputInvalidMessageColumnGap: clamp(5px, 2.864px + 0.67vw, 8px);
    --navigationButtonContainerColumnGap: clamp(20px, 11.424px + 2.68vw, 32px);
    --difficultyMenuRowGap: clamp(5.5px, 3.424px + 0.65vw, 8.4px);
    --difficultyMenuOptionContainerColumnGap: clamp(30px, 15.712px + 4.46vw, 50px);
    --difficultyMenuOptionRowGap: clamp(6.96px, 3.712px + 1.01vw, 11.5px);
    --gameScreenRowGap1: clamp(20.34px, 9.408px + 3.42vw, 35.65px);
    --gameScreenRowGap2: clamp(10px, -0.72px + 3.35vw, 25px);
    --playersContainerPlayerCardGap: clamp(3.88px, 1.21vw, 9.312px);
    --playersContainerColumnGap: clamp(5.32px, 1.66vw, 12.768px);
    --currentPlayerPlayersContainerColumnGap: clamp(5px, 1.56vw, 12px);
    --boardGap: clamp(2px, 0.058rem + 0.33vw, 3.5px);
    --pauseMenuRowGap: clamp(34px, 19.184px + 4.63vw, 54.75px);
    --pauseMenuButtonContainerRowGap: clamp(15px, 8.208px + 2.12vw, 24.5px);
    --pauseOptionButtonColumnGap: clamp(5px, 2.864px + 0.67vw, 8px);
    --confirmationMenuRowGap: clamp(9px, 4.72px + 1.34vw, 15px);
    --confirmationMenuButtonContainerColumnGap: clamp(30px, 15.712px + 4.46vw, 50px);
    --resultMenuRowGap: clamp(15px, 8.576px + 2.01vw, 24px);
    /* -------------------------------------------------------- */

    /* Offset */
    /* -------------------------------------------------------- */
    --homeContainerIconHorizontalOffset: calc(-1 * (var(--homeContainerIconSize) + var(--homeContainerColumnGap)));
    --homeContainerIconVerticalOffset: calc(-1 * (var(--homeContainerIconSize) - 100%) / 2);
    --avatarDecoratorOffset: calc(100% * (3 / 60) * -1);
    --playerNameMenuAvatarContainerTop: calc(-1 * clamp(17px, 9.68px + 2.29vw, 27.25px));
    --iconContainerDecoratorOffset: calc(-1 * clamp(5px, 2.864px + 0.67vw, 8px));
    --currentPlayerPlayerNameDecoratorOffset: calc(-1 * clamp(3px, 0.94vw, 7.2px));
    --roundIndicatorContainerTop: calc(-1 * clamp(5.53px, 3.76px + 0.55vw, 8px));
    --roundIndicatorContainerLeft: 50%;
    --winnerAvatarContainerBannerLeft: calc(-1 / 2 * (var(--winnerAvatarContainerBannerWidth) - 100%));
    --winnerAvatarContainerBannerTop: calc(-1 * clamp(10px, 5.36px + 1.45vw, 16.5px));
    --winnerAvatarContainerDecoratorLeft: calc(100% * (-22.72 / 150));
    --winnerAvatarContainerDecoratorTop: calc(100% * (-82.67 / 150));
    /* -------------------------------------------------------- */

    /* padding */
    /* -------------------------------------------------------- */
    --headerPaddingBlock: clamp(21px, 10.3216px + 3.3393vw, 35.97rem);
    --gameTypeFieldsetPaddingBlock: clamp(6.77px, 2.5392px + 1.3214vw, 12.69px);
    --gameTypeFieldsetPaddingInLine: clamp(8.63px, 4.1664px + 1.3929vw, 14.87px);
    --footerPaddingBlock: clamp(10px, 4.64px + 1.675vw, 17.5px);
    --homeMenuGameTypeOptionPaddingBlock: clamp(4.93px, 2.4368px + 0.7786vw, 8.41px);
    --playerNameMenuPaddingTop: clamp(51px, 29.04px + 6.86vw, 81.75px);
    --sessionMenuPaddingBottom: clamp(15px, 8.576px + 2.01vw, 24px);
    --playerNameInputPaddingInLine: calc((1em * (16 / 18)) - var(--playerNameInputBorderWidth));
    --playerNameInputPaddingBlock: calc(clamp(6.5px, 3.712px + 0.87vw, 10.4px) - var(--playerNameInputBorderWidth));
    --difficultyMenuPaddingBlock: clamp(15px, 8.432px + 2.05vw, 24.19px);
    --difficultyMenuIconContainerPadding: clamp(2.175px, 1.232px + 0.3vw, 3.5px);
    --difficultyMenuIconContainerCheckedPadding: clamp(2.5px, 1.424px + 0.33vw, 4px);
    --roundIndicatorContainerBlockPadding: clamp(2.5px, 1.424px + 0.33vw, 4px);
    --roundIndicatorContainerInLinePadding: clamp(5px, 2.864px + 0.67vw, 8px);
    --confirmationMenuPaddingBlock: clamp(15px, 8.288px + 2.1vw, 24.39px);
    /* -------------------------------------------------------- */

    /* border */
    /* -------------------------------------------------------- */
    --gameTypeFieldsetBorderWidth: clamp(1px, 0.5056px + 0.1571vw, 1.714684338574782px);
    --playerNameInputBorderWidth: clamp(2px, 1.28px + 0.22vw, 3px);
    --navigationButtonBorderWidth: clamp(1px, 0.576px + 0.13vw, 1.6034793915639722px);
    --resultMenuResultButtonBorderWidth: clamp(1px, 0.288px + 0.22vw, 2px);
    /* -------------------------------------------------------- */

    /* filter */
    /* -------------------------------------------------------- */
    --iconContainerBrightness: 70%;
    --currentPlayerIconContainerBrightness: 100%;
    /* -------------------------------------------------------- */

    /* transition */
    /* -------------------------------------------------------- */
    --currentPlayerTransitionDeclaration: all var(--ShiftChangeTimer) linear;
    /* -------------------------------------------------------- */

    /* time */
    /* -------------------------------------------------------- */
    --ShiftChangeTimer: 0.25s;
    --nopeRotationTimer: 0.75s;
    /* -------------------------------------------------------- */

    /* rotation */
    /* -------------------------------------------------------- */
    --nopeRotationAngle: 15deg;
    /* -------------------------------------------------------- */

    font-size: 100%;
}

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-size: 0rem;
    font-family: lugati, Arial, Verdana, Tahoma, "Trebuchet MS";
    text-decoration: none;
    border-style: none;
}

body {
    min-height: 100vh;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: max-content 1fr max-content;
    grid-template-areas:
        "header"
        "main"
        "footer";
    position: relative;
}

/* -------------------------------------------------------------------------------------------------------------- */

/* header */
/* -------------------------------------------------------- */
header {
    grid-area: header;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    background-color: var(--colorPrimary600);
    place-items: center;
    padding-block: var(--headerPaddingBlock);
}

#homeContainer {
    font-size: var(--homeContainerFontSize);
    position: relative;
}

#homeContainer::before {
    position: absolute;
    font-size: inherit;
    display: block;
    width: var(--homeContainerIconSize);
    height: var(--homeContainerIconSize);
    content: "";
    background-image: url("./img/homeLogo.svg");
    background-size: 100%;
    left: var(--homeContainerIconHorizontalOffset);
    top: var(--homeContainerIconVerticalOffset);
}

#homeTitle {
    font-size: inherit;
    font-weight: 700;
    line-height: 1.2;
    color: var(--colorSecondary100);
}

header .pauseButton {
    display: none;
}
/* -------------------------------------------------------- */

/* main */
/* -------------------------------------------------------- */
main {
    grid-area: main;
    background-color: var(--colorPrimary200);
}

#carrousel {
    position: relative;
    width: 100%;
    height: 100%;
    overflow-x: visible;
}

.screen {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.inactiveRightScreen {
    transform: translateX(100%);
}

.inactiveLeftScreen {
    transform: translateX(-100%);
}

.activeScreen {
    transform: translateX(0);
}

.slideLeftToCenter {
    animation: 0.5s linear slideLeftToCenter;
}

@keyframes slideLeftToCenter {
    from {
        transform: translateX(-100%);
    }

    to {
        transform: translateX(0);
    }
}

.slideCenterToRight {
    animation: 0.5s linear slideCenterToRight;
}

@keyframes slideCenterToRight {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(100%);
    }
}

.slideRightToCenter {
    animation: 0.5s linear slideRightToCenter;
}

@keyframes slideRightToCenter {
    from {
        transform: translateX(100%);
    }

    to {
        transform: translateX(0);
    }
}

.slideCenterToLeft {
    animation: 0.5s linear slideCenterToLeft;
}

@keyframes slideCenterToLeft {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(-100%);
    }
}

#homeScreen {
    flex-direction: column;
}

#homeMenu {
    height: 100%;
    align-content: center;
    font-size: var(--homeMenuFontSize);
    display: grid;
    grid-template-columns: max-content;
    grid-template-rows:
        max-content minmax(calc(var(--homeMenuRowGap) / 2), var(--homeMenuRowGap))
        max-content;
    grid-template-areas:
        "PVSP"
        "."
        "PVSCPU";
}

#homeMenu .gameTypeFieldset {
    padding-block: var(--gameTypeFieldsetPaddingBlock);
    padding-inline: var(--gameTypeFieldsetPaddingInLine);
    font-size: inherit;
    display: flex;
    flex-direction: column;
    row-gap: var(--gameTypeFieldsetRowGap);
    background-color: var(--colorPrimary600);
    border: var(--gameTypeFieldsetBorderWidth) solid var(--colorAccent1);
    align-items: center;
}

#PVSPFieldset {
    grid-area: PVSP;
}

#PVSCPUFieldset {
    grid-area: PVSCPU;
}

#homeMenu .legendContainer {
    font-size: inherit;
    display: flex;
    column-gap: var(--legendContainerColumnGap);
    align-items: center;
}

#homeMenu .playerContainer {
    font-size: inherit;
    display: flex;
    flex-direction: column;
    row-gap: var(--playerContainerRowGap);
    align-items: center;
}

.skeleton {
    animation: skeletonLoading 1s linear infinite alternate;
}

@keyframes skeletonLoading {
    from {
        background-color: var(--colorSkeleton1);
    }

    to {
        background-color: var(--colorSkeleton2);
    }
}

#homeMenu .avatarImage {
    --colorSkeleton1: var(--colorPrimary500);
    --colorSkeleton2: var(--colorPrimary400);
    width: var(--homeMenuAvatarImageSize);
    height: var(--homeMenuAvatarImageSize);
}

#homeMenu .playerName {
    font-size: var(--homeMenuPlayerNameFontSize);
    font-weight: 700;
    line-height: 1;
}

#homeMenu .playerName.player1 {
    color: var(--colorPlayer1-100);
}

#homeMenu .playerName.player2 {
    color: var(--colorPlayer2-100);
}

#homeMenu .VSIcon {
    font-size: inherit;
    width: var(--homeMenuVSIconSize);
}

#homeMenu .gameTypeLabel {
    display: flex;
    justify-content: center;
    font-size: inherit;
    line-height: 1;
    color: var(--colorPrimary700);
    width: var(--homeMenuGameTypeOptionWidth);
    padding-block: var(--homeMenuGameTypeOptionPaddingBlock);
    background-color: var(--colorSecondary100);
}

.unstyledRadio {
    /*  -webkit-appearance: none;
    appearance: none; */
    display: none;
}

.playerNameMenu {
    padding-block: var(--playerNameMenuPaddingTop) var(--sessionMenuPaddingBottom);
    font-size: var(--playerNameMenuFontSize);
    width: var(--sessionMenuWidth);
    background-color: var(--colorPrimary600);
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows:
        max-content var(--playerNameMenuRowGap1) max-content var(--playerNameMenuRowGap2)
        max-content;
    grid-template-areas:
        "label"
        "."
        "inputContainer"
        "."
        "buttonContainer";
    justify-items: center;
    position: relative;
}

.playerNameMenu .avatarContainer {
    position: absolute;
    top: var(--playerNameMenuAvatarContainerTop);
}

.playerNameMenu .avatarContainer::after,
.playerNameMenu .avatarContainer::before {
    position: absolute;
    content: "";
    width: var(--avatarDecoratorSize);
    height: var(--avatarDecoratorSize);
    background-size: 100%;
}

.playerNameMenu .avatarContainer::after {
    background-image: url("./img/avatarDecoratorTopLeft.svg");
    top: var(--avatarDecoratorOffset);
    left: var(--avatarDecoratorOffset);
}

.playerNameMenu .avatarContainer::before {
    background-image: url("./img/avatarDecoratorBottomRight.svg");
    bottom: var(--avatarDecoratorOffset);
    right: var(--avatarDecoratorOffset);
}

.playerNameMenu .avatarImage {
    --colorSkeleton1: var(--colorPrimary500);
    --colorSkeleton2: var(--colorPrimary400);
    width: var(--playerNameMenuAvatarImageSize);
    height: var(--playerNameMenuAvatarImageSize);
    display: block;
}

.playerNameMenu .menuTitle {
    grid-area: label;
    font-size: inherit;
    color: var(--colorPrimary100);
}

.playerNameMenu .inputContainer {
    grid-area: inputContainer;
    font-size: inherit;
    display: grid;
    grid-template-columns: 1fr max-content 1fr;
    grid-template-rows: repeat(2, max-content);
    grid-template-areas:
        ". input indicator"
        "message message message";
    row-gap: var(--playerNameMenuInputContainerRowGap);
}

.playerNameMenu .playerNameInput {
    grid-area: input;
    font-size: var(--playerNameInputFontSize);
    line-height: 1;
    width: var(--playerNameInputWidth);
    padding-inline: var(--playerNameInputPaddingInLine);
    padding-block: var(--playerNameInputPaddingBlock);
    border: var(--playerNameInputBorderWidth) solid var(--colorPrimary100);
    color: var(--colorPrimary300);
    background-color: var(--colorInputTextBackground);
    text-align: center;
}

.playerNameMenu .playerNameInput::placeholder {
    color: var(--colorPrimary100);
}

.playerNameMenu .activeTextInput:valid {
    background-color: var(--colorValidInputTextBackground);
    color: var(--colorValidInputTextFont);
    border-color: var(--colorValid100);
}

.playerNameMenu .activeTextInput:invalid {
    background-color: var(--colorInvalidInputTextBackground);
    color: var(--colorInvalidInputTextFont);
    border-color: var(--colorInvalid100);
}

.playerNameMenu .inputIndicator {
    visibility: hidden;
    grid-area: indicator;
    content: "";
    background-size: 100%;
    height: 100%;
    width: auto;
    aspect-ratio: 1 / 1;
    justify-self: end;
}

.playerNameMenu .activeTextInput:valid ~ .inputIndicator {
    visibility: visible;
    background-image: url("./img/thumbUp.svg");
}

.playerNameMenu .activeTextInput:invalid ~ .inputIndicator {
    visibility: visible;
    background-image: url("./img/thumbDown.svg");
}

.playerNameMenu .inputInvalidMessage {
    visibility: hidden;
    grid-area: message;
    display: flex;
    column-gap: var(--inputInvalidMessageColumnGap);
    font-size: inherit;
    align-items: center;
}

.playerNameMenu .activeTextInput:invalid ~ .inputInvalidMessage {
    visibility: visible;
}

.inputInvalidMessage .messageText {
    font-size: var(--inputInvalidMessageFontSize);
    font-style: italic;
    color: var(--colorInvalid100);
}

.inputInvalidMessage .messageIcon {
    width: var(--inputInvalidMessageIconSize);
    height: var(--inputInvalidMessageIconSize);
    background-image: url("./img/warning.svg");
    background-size: 100%;
}

.navigationButtonContainer {
    grid-area: buttonContainer;
    display: flex;
    column-gap: var(--navigationButtonContainerColumnGap);
}

.navigationButton {
    width: var(--navigationButtonSize);
    height: var(--navigationButtonSize);
    background-color: var(--colorPrimary500);
    border: var(--navigationButtonBorderWidth) solid var(--colorSecondary200);
    background-origin: border-box;
    background-size: var(--navigationButtonBackgroundSize);
    background-position: center;
}

.navigationButton.previous {
    background-image: url("./img/leftArrow.svg");
}

.navigationButton.next {
    background-image: url("./img/rightArrow.svg");
}

#difficultyMenu {
    padding-block: var(--difficultyMenuPaddingBlock);
    font-size: var(--difficultyMenuFontSize);
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: max-content 1fr max-content;
    grid-template-areas:
        "title"
        "options"
        "buttonContainer";
    row-gap: var(--difficultyMenuRowGap);
    background-color: var(--colorPrimary600);
    width: var(--sessionMenuWidth);
    justify-items: center;
}

#difficultyMenu .menuTitle {
    grid-area: title;
    font-size: var(--difficultyMenuMenuTitleFontSize);
    color: var(--colorPrimary100);
    font-weight: 700;
    line-height: 1;
}

#difficultyMenu .optionContainer {
    grid-area: options;
    font-size: inherit;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 1fr;
    grid-template-areas: "left right";
    column-gap: var(--difficultyMenuOptionContainerColumnGap);
}

#difficultyMenu .option {
    font-size: inherit;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: var(--difficultyMenuOptionRowGap);
}

#difficultyMenu .option input[type="radio"] {
    background-color: #fff;
}

#difficultyMenu .iconContainer {
    padding: var(--difficultyMenuIconContainerPadding);
    display: flex;
    justify-content: center;
    justify-items: center;
    background-color: var(--colorPrimary300);
    filter: brightness(var(--iconContainerBrightness));
}

#difficultyMenu .option input[type="radio"]:checked ~ .iconContainer {
    --iconContainerBrightness: 100%;
    --difficultyMenuIconContainerPadding: var(--difficultyMenuIconContainerCheckedPadding);
    position: relative;
}

#difficultyMenu .option input[type="radio"]:checked ~ .iconContainer::after,
#difficultyMenu .option input[type="radio"]:checked ~ .iconContainer::before {
    position: absolute;
    content: "";
    background-size: 100%;
    width: var(--iconContainerDecoratorSize);
    height: var(--iconContainerDecoratorSize);
}

#difficultyMenu .option input[type="radio"]:checked ~ .iconContainer.left::after {
    background-image: url("./img/dificultyDecoratorTopLeft.svg");
    left: var(--iconContainerDecoratorOffset);
    top: var(--iconContainerDecoratorOffset);
}

#difficultyMenu .option input[type="radio"]:checked ~ .iconContainer.right::after {
    background-image: url("./img/dificultyDecoratorTopRight.svg");
    right: var(--iconContainerDecoratorOffset);
    top: var(--iconContainerDecoratorOffset);
}

#difficultyMenu .option input[type="radio"]:checked ~ .iconContainer.left::before {
    background-image: url("./img/dificultyDecoratorBottomRight.svg");
    right: var(--iconContainerDecoratorOffset);
    bottom: var(--iconContainerDecoratorOffset);
}

#difficultyMenu .option input[type="radio"]:checked ~ .iconContainer.right::before {
    background-image: url("./img/dificultyDecoratorBottomLeft.svg");
    left: var(--iconContainerDecoratorOffset);
    bottom: var(--iconContainerDecoratorOffset);
}

#difficultyMenu .difficultyIcon {
    width: var(--difficultyIconSize);
    height: var(--difficultyIconSize);
}

#difficultyMenu .option input[type="radio"]:checked ~ .iconContainer .difficultyIcon {
    --difficultyIconSize: var(--difficultyIconCheckedSize);
}

#difficultyMenu .optionLabel {
    font-size: var(--difficultyMenuOptionLabelFontSize);
    color: var(--colorAccent1Disabled);
    font-weight: 700;
    line-height: 1;
}

#difficultyMenu .option input[type="radio"]:checked ~ .optionLabel {
    font-size: inherit;
    color: var(--colorAccent1);
}

#gameScreen {
    display: grid;
    grid-template-columns: max-content;
    grid-template-rows:
        max-content var(--gameScreenRowGap1) max-content var(--gameScreenRowGap2)
        var(--pauseButtonIconHeight);
    grid-template-areas:
        "players"
        "."
        "board"
        "."
        "pauseButton";
    place-content: center;
    justify-items: center;
}

#playersContainer {
    grid-area: players;
    font-size: var(--currentPlayerPlayersContainerPlayerNameFontSize);
    display: grid;
    grid-template-columns: var(--currentPlayerPlayerCardContainerWidth) max-content var(--currentPlayerPlayerCardContainerWidth);
    grid-template-rows: var(--currentPlayerPlayerCardContainerHeight);
    grid-template-areas: "left center right";
    place-items: center;
    column-gap: var(--playersContainerColumnGap);
}

#playersContainer .playerCardContainer {
    font-size: inherit;
    transition: var(--currentPlayerTransitionDeclaration);
}

#playersContainer .playerCardContainer.currentPlayer {
    display: flex;
    justify-content: center;
    font-size: var(--currentPlayerPlayersContainerPlayerNameFontSize);
    min-width: var(--currentPlayerPlayerCardContainerWidth);
}

#playersContainer .left {
    grid-area: left;
}

#playersContainer .right {
    grid-area: right;
}

#playersContainer .playerCard {
    display: grid;
    grid-template-columns: max-content;
    grid-template-rows: repeat(2, max-content);
    grid-template-areas:
        "name"
        "avatar";
    row-gap: var(--playersContainerPlayerCardGap);
    justify-items: center;
    font-size: inherit;
    transition: var(--currentPlayerTransitionDeclaration);
}

#playersContainer .currentPlayer .playerCard {
    row-gap: var(--currentPlayerPlayersContainerColumnGap);
    transition: var(--currentPlayerTransitionDeclaration);
}

#playersContainer .avatarImage {
    --colorSkeleton1: var(--colorPrimary500);
    --colorSkeleton2: var(--colorPrimary400);
    width: var(--playersContainerAvatarImageSize);
    height: var(--playersContainerAvatarImageSize);
    filter: brightness(var(--iconContainerBrightness));
    transition: var(--currentPlayerTransitionDeclaration);
}

#playersContainer .currentPlayer .avatarImage {
    --playersContainerAvatarImageSize: var(--currentPlayerPlayersContainerAvatarImageSize);
    --iconContainerBrightness: var(--currentPlayerIconContainerBrightness);
}

#playersContainer .avatarImage[src=""] {
    --iconContainerBrightness: 100%;
}

#playersContainer .playerName {
    font-size: var(--playersContainerPlayerNameFontSize);
    font-weight: 700;
    line-height: 1;
    color: var(--colorPrimary500);
    transition: var(--currentPlayerTransitionDeclaration);
}

#playersContainer .currentPlayer .playerName {
    font-size: inherit;
    color: var(--colorPrimary700);
    position: relative;
}

#playersContainer .currentPlayer .playerName::after,
#playersContainer .currentPlayer .playerName::before {
    position: absolute;
    width: var(--currentPlayerPlayerNameDecoratorWidthSize);
    height: var(--currentPlayerPlayerNameDecoratorWidthSize);
    content: "";
    background-size: 100%;
}

#playersContainer .currentPlayer.left .playerName::after {
    background-image: url("./img/playerCardDecoratorTopLeft.svg");
    top: var(--currentPlayerPlayerNameDecoratorOffset);
    left: var(--currentPlayerPlayerNameDecoratorOffset);
}

#playersContainer .currentPlayer.left .playerName::before {
    background-image: url("./img/playerCardDecoratorBottomRight.svg");
    bottom: var(--currentPlayerPlayerNameDecoratorOffset);
    right: var(--currentPlayerPlayerNameDecoratorOffset);
}

#playersContainer .currentPlayer.right .playerName::after {
    background-image: url("./img/playerCardDecoratorTopRight.svg");
    top: var(--currentPlayerPlayerNameDecoratorOffset);
    right: var(--currentPlayerPlayerNameDecoratorOffset);
}

#playersContainer .currentPlayer.right .playerName::before {
    background-image: url("./img/playerCardDecoratorBottomLeft.svg");
    bottom: var(--currentPlayerPlayerNameDecoratorOffset);
    left: var(--currentPlayerPlayerNameDecoratorOffset);
}

#playersContainer .VSIcon {
    grid-area: center;
    width: var(--playersContainerVSIconWidth);
}

#boardContainer {
    grid-area: board;
    position: relative;
}

#board {
    padding: var(--boardGap);
    display: grid;
    grid-template-columns: repeat(3, max-content);
    grid-template-rows: repeat(3, max-content);
    gap: var(--boardGap);
    background-color: var(--colorPrimary400);
    transition: var(--currentPlayerTransitionDeclaration);
}

#board.player2 {
    background-color: var(--colorPlayer2-100);
}

#board.player1 {
    background-color: var(--colorPlayer1-100);
}

#board.draw {
    background-color: var(--colorDraw100);
}

#board .cell {
    position: relative;
    background-color: var(--colorPrimary700);
    width: var(--boardCellSize);
    height: var(--boardCellSize);
    display: flex;
    justify-content: center;
    align-items: center;
    transition: background-color 0.5s linear;
    overflow: hidden;
}

#board .cell.player1 {
    background-color: var(--colorPlayer1-100);
}

#board .cell.player2 {
    background-color: var(--colorPlayer2-100);
}

#board .cell.invalidMove::before {
    position: absolute;
    content: "";
    background-color: var(--colorPrimary600);
    width: 100%;
    height: 100%;
}

#board .cell.invalidMove::after {
    position: absolute;
    content: "";
    background-image: url("./img/nope.svg");
    background-size: 100%;
    width: var(--cellInvalidMoveBackgroundSize);
    height: var(--cellInvalidMoveBackgroundSize);
    transform-origin: bottom center;
    animation: nopeRotation linear infinite var(--nopeRotationTimer) alternate;
}

@keyframes nopeRotation {
    from {
        transform: rotate(calc(-1 * var(--nopeRotationAngle)));
    }
    to {
        transform: rotate(var(--nopeRotationAngle));
    }
}

.cell .token {
    width: var(--cellTokenSize);
    height: var(--cellTokenSize);
    transform: scale(0);
    opacity: 0;
    transition: 0.25s linear;
    transition-property: opacity, transform;
}

.token.smoothPopOut {
    transform: scale(1);
    opacity: 1;
}

.token.player1 .fills {
    fill: var(--colorPlayer1-100);
}

.token.player2 .fills {
    fill: var(--colorPlayer2-100);
}

#board.draw .token .fills {
    fill: var(--colorDraw100);
}

#roundIndicatorContainer {
    padding: var(--roundIndicatorContainerBlockPadding) var(--roundIndicatorContainerInLinePadding);
    position: absolute;
    background-color: var(--colorPrimary600);
    top: var(--roundIndicatorContainerTop);
    left: var(--roundIndicatorContainerLeft);
    transform: translate(-50%, -100%);
    display: flex;
    column-gap: var(--roundIndicatorContainerInLinePadding);
}

#roundIndicatorContainer .roundIndicator {
    width: var(--roundIndicatorWidth);
    height: var(--roundIndicatorHeight);
    background-color: var(--colorPrimary500);
}

#roundIndicatorContainer .roundIndicator.player1 {
    background-color: var(--colorPlayer1-100);
}

#roundIndicatorContainer .roundIndicator.player2 {
    background-color: var(--colorPlayer2-100);
}

#roundIndicatorContainer .roundIndicator.draw {
    background-color: var(--colorDraw100);
}

#roundIndicatorContainer .roundIndicator.current {
    background-color: var(--colorPrimary200);
}

